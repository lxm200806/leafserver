// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ChessOuterMessage.proto

package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// #region Client-Realm
type XC2R_Login_Req struct {
	Account  string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
}

func (m *XC2R_Login_Req) Reset()                    { *m = XC2R_Login_Req{} }
func (m *XC2R_Login_Req) String() string            { return proto.CompactTextString(m) }
func (*XC2R_Login_Req) ProtoMessage()               {}
func (*XC2R_Login_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *XC2R_Login_Req) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *XC2R_Login_Req) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type XR2C_Login_Ack struct {
	Error   int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
	Key     int64  `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=Address" json:"Address,omitempty"`
}

func (m *XR2C_Login_Ack) Reset()                    { *m = XR2C_Login_Ack{} }
func (m *XR2C_Login_Ack) String() string            { return proto.CompactTextString(m) }
func (*XR2C_Login_Ack) ProtoMessage()               {}
func (*XR2C_Login_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *XR2C_Login_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XR2C_Login_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *XR2C_Login_Ack) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *XR2C_Login_Ack) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type XC2R_Register_Req struct {
	Account  string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
}

func (m *XC2R_Register_Req) Reset()                    { *m = XC2R_Register_Req{} }
func (m *XC2R_Register_Req) String() string            { return proto.CompactTextString(m) }
func (*XC2R_Register_Req) ProtoMessage()               {}
func (*XC2R_Register_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *XC2R_Register_Req) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *XC2R_Register_Req) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type XR2C_Register_Ack struct {
	Error   int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
}

func (m *XR2C_Register_Ack) Reset()                    { *m = XR2C_Register_Ack{} }
func (m *XR2C_Register_Ack) String() string            { return proto.CompactTextString(m) }
func (*XR2C_Register_Ack) ProtoMessage()               {}
func (*XR2C_Register_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *XR2C_Register_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XR2C_Register_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// #endregion
// #region Client-Gate
type XC2G_LoginGate_Req struct {
	Key int64 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *XC2G_LoginGate_Req) Reset()                    { *m = XC2G_LoginGate_Req{} }
func (m *XC2G_LoginGate_Req) String() string            { return proto.CompactTextString(m) }
func (*XC2G_LoginGate_Req) ProtoMessage()               {}
func (*XC2G_LoginGate_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *XC2G_LoginGate_Req) GetKey() int64 {
	if m != nil {
		return m.Key
	}
	return 0
}

type XG2C_LoginGate_Ack struct {
	Error    int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message  string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
	PlayerID int64  `protobuf:"varint,1,opt,name=PlayerID" json:"PlayerID,omitempty"`
	UserID   int64  `protobuf:"varint,2,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XG2C_LoginGate_Ack) Reset()                    { *m = XG2C_LoginGate_Ack{} }
func (m *XG2C_LoginGate_Ack) String() string            { return proto.CompactTextString(m) }
func (*XG2C_LoginGate_Ack) ProtoMessage()               {}
func (*XG2C_LoginGate_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *XG2C_LoginGate_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XG2C_LoginGate_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *XG2C_LoginGate_Ack) GetPlayerID() int64 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *XG2C_LoginGate_Ack) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XC2G_GetUserInfo_Req struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XC2G_GetUserInfo_Req) Reset()                    { *m = XC2G_GetUserInfo_Req{} }
func (m *XC2G_GetUserInfo_Req) String() string            { return proto.CompactTextString(m) }
func (*XC2G_GetUserInfo_Req) ProtoMessage()               {}
func (*XC2G_GetUserInfo_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *XC2G_GetUserInfo_Req) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XG2C_GetUserInfo_Ack struct {
	Error    int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message  string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
	NickName string `protobuf:"bytes,1,opt,name=NickName" json:"NickName,omitempty"`
	Money    int64  `protobuf:"varint,4,opt,name=Money" json:"Money,omitempty"`
}

func (m *XG2C_GetUserInfo_Ack) Reset()                    { *m = XG2C_GetUserInfo_Ack{} }
func (m *XG2C_GetUserInfo_Ack) String() string            { return proto.CompactTextString(m) }
func (*XG2C_GetUserInfo_Ack) ProtoMessage()               {}
func (*XG2C_GetUserInfo_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *XG2C_GetUserInfo_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XG2C_GetUserInfo_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *XG2C_GetUserInfo_Ack) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *XG2C_GetUserInfo_Ack) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

type XC2G_StartMatch_Req struct {
}

func (m *XC2G_StartMatch_Req) Reset()                    { *m = XC2G_StartMatch_Req{} }
func (m *XC2G_StartMatch_Req) String() string            { return proto.CompactTextString(m) }
func (*XC2G_StartMatch_Req) ProtoMessage()               {}
func (*XC2G_StartMatch_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type XG2C_StartMatch_Ack struct {
	Error   int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
}

func (m *XG2C_StartMatch_Ack) Reset()                    { *m = XG2C_StartMatch_Ack{} }
func (m *XG2C_StartMatch_Ack) String() string            { return proto.CompactTextString(m) }
func (*XG2C_StartMatch_Ack) ProtoMessage()               {}
func (*XG2C_StartMatch_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *XG2C_StartMatch_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XG2C_StartMatch_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type XC2G_ReturnLobby_Ntt struct {
}

func (m *XC2G_ReturnLobby_Ntt) Reset()                    { *m = XC2G_ReturnLobby_Ntt{} }
func (m *XC2G_ReturnLobby_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XC2G_ReturnLobby_Ntt) ProtoMessage()               {}
func (*XC2G_ReturnLobby_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

type XC2G_CreateRoom_Req struct {
	Error   int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
	UserID  int64  `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XC2G_CreateRoom_Req) Reset()                    { *m = XC2G_CreateRoom_Req{} }
func (m *XC2G_CreateRoom_Req) String() string            { return proto.CompactTextString(m) }
func (*XC2G_CreateRoom_Req) ProtoMessage()               {}
func (*XC2G_CreateRoom_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *XC2G_CreateRoom_Req) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XC2G_CreateRoom_Req) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *XC2G_CreateRoom_Req) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XG2C_CreateRoom_Ack struct {
}

func (m *XG2C_CreateRoom_Ack) Reset()                    { *m = XG2C_CreateRoom_Ack{} }
func (m *XG2C_CreateRoom_Ack) String() string            { return proto.CompactTextString(m) }
func (*XG2C_CreateRoom_Ack) ProtoMessage()               {}
func (*XG2C_CreateRoom_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

// #endregion
// #region Gate-Client
type XG2C_PlayerDisconnect_Ntt struct {
}

func (m *XG2C_PlayerDisconnect_Ntt) Reset()                    { *m = XG2C_PlayerDisconnect_Ntt{} }
func (m *XG2C_PlayerDisconnect_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XG2C_PlayerDisconnect_Ntt) ProtoMessage()               {}
func (*XG2C_PlayerDisconnect_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

// #endregion
// #region g-Center
// #endregion Center-Client
// #region Client-Map
type XActor_GamerReady_Ntt struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XActor_GamerReady_Ntt) Reset()                    { *m = XActor_GamerReady_Ntt{} }
func (m *XActor_GamerReady_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerReady_Ntt) ProtoMessage()               {}
func (*XActor_GamerReady_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *XActor_GamerReady_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XActor_GamerGrabLandlordSelect_Ntt struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	IsGrab bool  `protobuf:"varint,2,opt,name=IsGrab" json:"IsGrab,omitempty"`
}

func (m *XActor_GamerGrabLandlordSelect_Ntt) Reset()         { *m = XActor_GamerGrabLandlordSelect_Ntt{} }
func (m *XActor_GamerGrabLandlordSelect_Ntt) String() string { return proto.CompactTextString(m) }
func (*XActor_GamerGrabLandlordSelect_Ntt) ProtoMessage()    {}
func (*XActor_GamerGrabLandlordSelect_Ntt) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{15}
}

func (m *XActor_GamerGrabLandlordSelect_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *XActor_GamerGrabLandlordSelect_Ntt) GetIsGrab() bool {
	if m != nil {
		return m.IsGrab
	}
	return false
}

type XActor_GamerPlayCard_Req struct {
	Cards []*CCard `protobuf:"bytes,1,rep,name=Cards" json:"Cards,omitempty"`
}

func (m *XActor_GamerPlayCard_Req) Reset()                    { *m = XActor_GamerPlayCard_Req{} }
func (m *XActor_GamerPlayCard_Req) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerPlayCard_Req) ProtoMessage()               {}
func (*XActor_GamerPlayCard_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *XActor_GamerPlayCard_Req) GetCards() []*CCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type XActor_GamerPlayCard_Ack struct {
	Error   int32  `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message string `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
}

func (m *XActor_GamerPlayCard_Ack) Reset()                    { *m = XActor_GamerPlayCard_Ack{} }
func (m *XActor_GamerPlayCard_Ack) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerPlayCard_Ack) ProtoMessage()               {}
func (*XActor_GamerPlayCard_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *XActor_GamerPlayCard_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XActor_GamerPlayCard_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type XActor_GamerPlayCard_Ntt struct {
	UserID int64    `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	Cards  []*CCard `protobuf:"bytes,2,rep,name=Cards" json:"Cards,omitempty"`
}

func (m *XActor_GamerPlayCard_Ntt) Reset()                    { *m = XActor_GamerPlayCard_Ntt{} }
func (m *XActor_GamerPlayCard_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerPlayCard_Ntt) ProtoMessage()               {}
func (*XActor_GamerPlayCard_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *XActor_GamerPlayCard_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *XActor_GamerPlayCard_Ntt) GetCards() []*CCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type XActor_GamerPrompt_Req struct {
}

func (m *XActor_GamerPrompt_Req) Reset()                    { *m = XActor_GamerPrompt_Req{} }
func (m *XActor_GamerPrompt_Req) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerPrompt_Req) ProtoMessage()               {}
func (*XActor_GamerPrompt_Req) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

type XActor_GamerPrompt_Ack struct {
	Error   int32    `protobuf:"varint,90,opt,name=Error" json:"Error,omitempty"`
	Message string   `protobuf:"bytes,91,opt,name=Message" json:"Message,omitempty"`
	Cards   []*CCard `protobuf:"bytes,1,rep,name=Cards" json:"Cards,omitempty"`
}

func (m *XActor_GamerPrompt_Ack) Reset()                    { *m = XActor_GamerPrompt_Ack{} }
func (m *XActor_GamerPrompt_Ack) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerPrompt_Ack) ProtoMessage()               {}
func (*XActor_GamerPrompt_Ack) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *XActor_GamerPrompt_Ack) GetError() int32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *XActor_GamerPrompt_Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *XActor_GamerPrompt_Ack) GetCards() []*CCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type XActor_GamerDontPlay_Ntt struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XActor_GamerDontPlay_Ntt) Reset()                    { *m = XActor_GamerDontPlay_Ntt{} }
func (m *XActor_GamerDontPlay_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerDontPlay_Ntt) ProtoMessage()               {}
func (*XActor_GamerDontPlay_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *XActor_GamerDontPlay_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XActor_Trusteeship_Ntt struct {
	UserID        int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	IsTrusteeship bool  `protobuf:"varint,2,opt,name=isTrusteeship" json:"isTrusteeship,omitempty"`
}

func (m *XActor_Trusteeship_Ntt) Reset()                    { *m = XActor_Trusteeship_Ntt{} }
func (m *XActor_Trusteeship_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_Trusteeship_Ntt) ProtoMessage()               {}
func (*XActor_Trusteeship_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *XActor_Trusteeship_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *XActor_Trusteeship_Ntt) GetIsTrusteeship() bool {
	if m != nil {
		return m.IsTrusteeship
	}
	return false
}

// #endregion
// #region Map-Client
type XCGamerInfo struct {
	UserID    int64  `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	NickName  string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
	Money     int64  `protobuf:"varint,3,opt,name=Money" json:"Money,omitempty"`
	SeatID    int32  `protobuf:"varint,10,opt,name=SeatID" json:"SeatID,omitempty"`
	IsReady   bool   `protobuf:"varint,11,opt,name=IsReady" json:"IsReady,omitempty"`
	IsOffline bool   `protobuf:"varint,12,opt,name=IsOffline" json:"IsOffline,omitempty"`
}

func (m *XCGamerInfo) Reset()                    { *m = XCGamerInfo{} }
func (m *XCGamerInfo) String() string            { return proto.CompactTextString(m) }
func (*XCGamerInfo) ProtoMessage()               {}
func (*XCGamerInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *XCGamerInfo) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *XCGamerInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *XCGamerInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *XCGamerInfo) GetSeatID() int32 {
	if m != nil {
		return m.SeatID
	}
	return 0
}

func (m *XCGamerInfo) GetIsReady() bool {
	if m != nil {
		return m.IsReady
	}
	return false
}

func (m *XCGamerInfo) GetIsOffline() bool {
	if m != nil {
		return m.IsOffline
	}
	return false
}

type XCGamerCards struct {
	GamerCards []*CCard `protobuf:"bytes,1,rep,name=GamerCards" json:"GamerCards,omitempty"`
}

func (m *XCGamerCards) Reset()                    { *m = XCGamerCards{} }
func (m *XCGamerCards) String() string            { return proto.CompactTextString(m) }
func (*XCGamerCards) ProtoMessage()               {}
func (*XCGamerCards) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *XCGamerCards) GetGamerCards() []*CCard {
	if m != nil {
		return m.GamerCards
	}
	return nil
}

type XActor_GamerEnterRoom_Ntt struct {
	Gamer *XCGamerInfo `protobuf:"bytes,1,opt,name=Gamer" json:"Gamer,omitempty"`
}

func (m *XActor_GamerEnterRoom_Ntt) Reset()                    { *m = XActor_GamerEnterRoom_Ntt{} }
func (m *XActor_GamerEnterRoom_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerEnterRoom_Ntt) ProtoMessage()               {}
func (*XActor_GamerEnterRoom_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *XActor_GamerEnterRoom_Ntt) GetGamer() *XCGamerInfo {
	if m != nil {
		return m.Gamer
	}
	return nil
}

type XActor_GamersInRoom_Ntt struct {
	Gamers []*XCGamerInfo `protobuf:"bytes,3,rep,name=Gamers" json:"Gamers,omitempty"`
}

func (m *XActor_GamersInRoom_Ntt) Reset()                    { *m = XActor_GamersInRoom_Ntt{} }
func (m *XActor_GamersInRoom_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamersInRoom_Ntt) ProtoMessage()               {}
func (*XActor_GamersInRoom_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *XActor_GamersInRoom_Ntt) GetGamers() []*XCGamerInfo {
	if m != nil {
		return m.Gamers
	}
	return nil
}

type XActor_GamerExitRoom_Ntt struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XActor_GamerExitRoom_Ntt) Reset()                    { *m = XActor_GamerExitRoom_Ntt{} }
func (m *XActor_GamerExitRoom_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerExitRoom_Ntt) ProtoMessage()               {}
func (*XActor_GamerExitRoom_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *XActor_GamerExitRoom_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XActor_GamerReconnect_Ntt struct {
	Multiples              int32           `protobuf:"varint,1,opt,name=Multiples" json:"Multiples,omitempty"`
	LordCards              []*CCard        `protobuf:"bytes,2,rep,name=LordCards" json:"LordCards,omitempty"`
	GamersIdentity         []CIdentity     `protobuf:"varint,10,rep,packed,name=GamersIdentity,enum=msg.CIdentity" json:"GamersIdentity,omitempty"`
	DesksCards             []*XCGamerCards `protobuf:"bytes,11,rep,name=DesksCards" json:"DesksCards,omitempty"`
	GamerGrabLandlordState []bool          `protobuf:"varint,12,rep,packed,name=GamerGrabLandlordState" json:"GamerGrabLandlordState,omitempty"`
}

func (m *XActor_GamerReconnect_Ntt) Reset()                    { *m = XActor_GamerReconnect_Ntt{} }
func (m *XActor_GamerReconnect_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerReconnect_Ntt) ProtoMessage()               {}
func (*XActor_GamerReconnect_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *XActor_GamerReconnect_Ntt) GetMultiples() int32 {
	if m != nil {
		return m.Multiples
	}
	return 0
}

func (m *XActor_GamerReconnect_Ntt) GetLordCards() []*CCard {
	if m != nil {
		return m.LordCards
	}
	return nil
}

func (m *XActor_GamerReconnect_Ntt) GetGamersIdentity() []CIdentity {
	if m != nil {
		return m.GamersIdentity
	}
	return nil
}

func (m *XActor_GamerReconnect_Ntt) GetDesksCards() []*XCGamerCards {
	if m != nil {
		return m.DesksCards
	}
	return nil
}

func (m *XActor_GamerReconnect_Ntt) GetGamerGrabLandlordState() []bool {
	if m != nil {
		return m.GamerGrabLandlordState
	}
	return nil
}

type XActor_GameStart_Ntt struct {
	GamersUserID     []int64         `protobuf:"varint,1,rep,packed,name=GamersUserID" json:"GamersUserID,omitempty"`
	GamersCardsCount []int32         `protobuf:"varint,3,rep,packed,name=GamersCardsCount" json:"GamersCardsCount,omitempty"`
	GamersCards      []*XCGamerCards `protobuf:"bytes,2,rep,name=GamersCards" json:"GamersCards,omitempty"`
}

func (m *XActor_GameStart_Ntt) Reset()                    { *m = XActor_GameStart_Ntt{} }
func (m *XActor_GameStart_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GameStart_Ntt) ProtoMessage()               {}
func (*XActor_GameStart_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *XActor_GameStart_Ntt) GetGamersUserID() []int64 {
	if m != nil {
		return m.GamersUserID
	}
	return nil
}

func (m *XActor_GameStart_Ntt) GetGamersCardsCount() []int32 {
	if m != nil {
		return m.GamersCardsCount
	}
	return nil
}

func (m *XActor_GameStart_Ntt) GetGamersCards() []*XCGamerCards {
	if m != nil {
		return m.GamersCards
	}
	return nil
}

type XActor_AuthorityGrabLandlord_Ntt struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XActor_AuthorityGrabLandlord_Ntt) Reset()         { *m = XActor_AuthorityGrabLandlord_Ntt{} }
func (m *XActor_AuthorityGrabLandlord_Ntt) String() string { return proto.CompactTextString(m) }
func (*XActor_AuthorityGrabLandlord_Ntt) ProtoMessage()    {}
func (*XActor_AuthorityGrabLandlord_Ntt) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{30}
}

func (m *XActor_AuthorityGrabLandlord_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type XActor_AuthorityPlayCard_Ntt struct {
	UserID  int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	IsFirst bool  `protobuf:"varint,2,opt,name=IsFirst" json:"IsFirst,omitempty"`
}

func (m *XActor_AuthorityPlayCard_Ntt) Reset()                    { *m = XActor_AuthorityPlayCard_Ntt{} }
func (m *XActor_AuthorityPlayCard_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_AuthorityPlayCard_Ntt) ProtoMessage()               {}
func (*XActor_AuthorityPlayCard_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *XActor_AuthorityPlayCard_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *XActor_AuthorityPlayCard_Ntt) GetIsFirst() bool {
	if m != nil {
		return m.IsFirst
	}
	return false
}

type XActor_SetMultiples_Ntt struct {
	Multiples int32 `protobuf:"varint,1,opt,name=Multiples" json:"Multiples,omitempty"`
}

func (m *XActor_SetMultiples_Ntt) Reset()                    { *m = XActor_SetMultiples_Ntt{} }
func (m *XActor_SetMultiples_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_SetMultiples_Ntt) ProtoMessage()               {}
func (*XActor_SetMultiples_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *XActor_SetMultiples_Ntt) GetMultiples() int32 {
	if m != nil {
		return m.Multiples
	}
	return 0
}

type XActor_SetLandlord_Ntt struct {
	UserID    int64    `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
	LordCards []*CCard `protobuf:"bytes,2,rep,name=LordCards" json:"LordCards,omitempty"`
}

func (m *XActor_SetLandlord_Ntt) Reset()                    { *m = XActor_SetLandlord_Ntt{} }
func (m *XActor_SetLandlord_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_SetLandlord_Ntt) ProtoMessage()               {}
func (*XActor_SetLandlord_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *XActor_SetLandlord_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *XActor_SetLandlord_Ntt) GetLordCards() []*CCard {
	if m != nil {
		return m.LordCards
	}
	return nil
}

type XActor_Gameover_Ntt struct {
	Winner            CIdentity `protobuf:"varint,1,opt,name=Winner,enum=msg.CIdentity" json:"Winner,omitempty"`
	BasePointPerMatch int64     `protobuf:"varint,2,opt,name=BasePointPerMatch" json:"BasePointPerMatch,omitempty"`
	Multiples         int32     `protobuf:"varint,3,opt,name=Multiples" json:"Multiples,omitempty"`
}

func (m *XActor_Gameover_Ntt) Reset()                    { *m = XActor_Gameover_Ntt{} }
func (m *XActor_Gameover_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_Gameover_Ntt) ProtoMessage()               {}
func (*XActor_Gameover_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *XActor_Gameover_Ntt) GetWinner() CIdentity {
	if m != nil {
		return m.Winner
	}
	return CIdentity_CIdentity_NULL
}

func (m *XActor_Gameover_Ntt) GetBasePointPerMatch() int64 {
	if m != nil {
		return m.BasePointPerMatch
	}
	return 0
}

func (m *XActor_Gameover_Ntt) GetMultiples() int32 {
	if m != nil {
		return m.Multiples
	}
	return 0
}

type XActor_GamerMoneyLess_Ntt struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID" json:"UserID,omitempty"`
}

func (m *XActor_GamerMoneyLess_Ntt) Reset()                    { *m = XActor_GamerMoneyLess_Ntt{} }
func (m *XActor_GamerMoneyLess_Ntt) String() string            { return proto.CompactTextString(m) }
func (*XActor_GamerMoneyLess_Ntt) ProtoMessage()               {}
func (*XActor_GamerMoneyLess_Ntt) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *XActor_GamerMoneyLess_Ntt) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func init() {
	proto.RegisterType((*XC2R_Login_Req)(nil), "msg._C2R_Login_Req")
	proto.RegisterType((*XR2C_Login_Ack)(nil), "msg._R2C_Login_Ack")
	proto.RegisterType((*XC2R_Register_Req)(nil), "msg._C2R_Register_Req")
	proto.RegisterType((*XR2C_Register_Ack)(nil), "msg._R2C_Register_Ack")
	proto.RegisterType((*XC2G_LoginGate_Req)(nil), "msg._C2G_LoginGate_Req")
	proto.RegisterType((*XG2C_LoginGate_Ack)(nil), "msg._G2C_LoginGate_Ack")
	proto.RegisterType((*XC2G_GetUserInfo_Req)(nil), "msg._C2G_GetUserInfo_Req")
	proto.RegisterType((*XG2C_GetUserInfo_Ack)(nil), "msg._G2C_GetUserInfo_Ack")
	proto.RegisterType((*XC2G_StartMatch_Req)(nil), "msg._C2G_StartMatch_Req")
	proto.RegisterType((*XG2C_StartMatch_Ack)(nil), "msg._G2C_StartMatch_Ack")
	proto.RegisterType((*XC2G_ReturnLobby_Ntt)(nil), "msg._C2G_ReturnLobby_Ntt")
	proto.RegisterType((*XC2G_CreateRoom_Req)(nil), "msg._C2G_CreateRoom_Req")
	proto.RegisterType((*XG2C_CreateRoom_Ack)(nil), "msg._G2C_CreateRoom_Ack")
	proto.RegisterType((*XG2C_PlayerDisconnect_Ntt)(nil), "msg._G2C_PlayerDisconnect_Ntt")
	proto.RegisterType((*XActor_GamerReady_Ntt)(nil), "msg._Actor_GamerReady_Ntt")
	proto.RegisterType((*XActor_GamerGrabLandlordSelect_Ntt)(nil), "msg._Actor_GamerGrabLandlordSelect_Ntt")
	proto.RegisterType((*XActor_GamerPlayCard_Req)(nil), "msg._Actor_GamerPlayCard_Req")
	proto.RegisterType((*XActor_GamerPlayCard_Ack)(nil), "msg._Actor_GamerPlayCard_Ack")
	proto.RegisterType((*XActor_GamerPlayCard_Ntt)(nil), "msg._Actor_GamerPlayCard_Ntt")
	proto.RegisterType((*XActor_GamerPrompt_Req)(nil), "msg._Actor_GamerPrompt_Req")
	proto.RegisterType((*XActor_GamerPrompt_Ack)(nil), "msg._Actor_GamerPrompt_Ack")
	proto.RegisterType((*XActor_GamerDontPlay_Ntt)(nil), "msg._Actor_GamerDontPlay_Ntt")
	proto.RegisterType((*XActor_Trusteeship_Ntt)(nil), "msg._Actor_Trusteeship_Ntt")
	proto.RegisterType((*XCGamerInfo)(nil), "msg._CGamerInfo")
	proto.RegisterType((*XCGamerCards)(nil), "msg._CGamerCards")
	proto.RegisterType((*XActor_GamerEnterRoom_Ntt)(nil), "msg._Actor_GamerEnterRoom_Ntt")
	proto.RegisterType((*XActor_GamersInRoom_Ntt)(nil), "msg._Actor_GamersInRoom_Ntt")
	proto.RegisterType((*XActor_GamerExitRoom_Ntt)(nil), "msg._Actor_GamerExitRoom_Ntt")
	proto.RegisterType((*XActor_GamerReconnect_Ntt)(nil), "msg._Actor_GamerReconnect_Ntt")
	proto.RegisterType((*XActor_GameStart_Ntt)(nil), "msg._Actor_GameStart_Ntt")
	proto.RegisterType((*XActor_AuthorityGrabLandlord_Ntt)(nil), "msg._Actor_AuthorityGrabLandlord_Ntt")
	proto.RegisterType((*XActor_AuthorityPlayCard_Ntt)(nil), "msg._Actor_AuthorityPlayCard_Ntt")
	proto.RegisterType((*XActor_SetMultiples_Ntt)(nil), "msg._Actor_SetMultiples_Ntt")
	proto.RegisterType((*XActor_SetLandlord_Ntt)(nil), "msg._Actor_SetLandlord_Ntt")
	proto.RegisterType((*XActor_Gameover_Ntt)(nil), "msg._Actor_Gameover_Ntt")
	proto.RegisterType((*XActor_GamerMoneyLess_Ntt)(nil), "msg._Actor_GamerMoneyLess_Ntt")
}

func init() { proto.RegisterFile("ChessOuterMessage.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 954 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x6f, 0x6f, 0xe2, 0xc6,
	0x13, 0x16, 0xf8, 0x47, 0x7e, 0xc9, 0x90, 0xa2, 0xc4, 0xf9, 0x73, 0xbe, 0xeb, 0xbd, 0x40, 0xab,
	0xea, 0x84, 0x4e, 0x55, 0xaa, 0x12, 0xe9, 0x2a, 0x9d, 0xfa, 0x86, 0x9a, 0x1c, 0xa2, 0x85, 0x5c,
	0xb4, 0xa4, 0xad, 0x74, 0x55, 0x65, 0x39, 0x78, 0x42, 0xdc, 0x80, 0x37, 0xdd, 0x5d, 0xda, 0xf0,
	0x05, 0x2a, 0xf5, 0x33, 0xf4, 0x03, 0xf4, 0x6b, 0x56, 0x1e, 0x2f, 0x66, 0x09, 0x31, 0x97, 0xd2,
	0x77, 0xcc, 0x9f, 0x7d, 0xf6, 0x99, 0x67, 0x66, 0x16, 0xc3, 0x33, 0xff, 0x06, 0x95, 0x7a, 0x3f,
	0xd5, 0x28, 0xfb, 0xa8, 0x54, 0x38, 0xc2, 0x93, 0x3b, 0x29, 0xb4, 0x70, 0x9d, 0x89, 0x1a, 0xbd,
	0xd8, 0xa3, 0x68, 0x5f, 0x44, 0x38, 0xce, 0xdc, 0xec, 0x1d, 0xd4, 0x02, 0xbf, 0xc9, 0x83, 0x9e,
	0x18, 0xc5, 0x49, 0xc0, 0xf1, 0x57, 0xd7, 0x83, 0xff, 0xb7, 0x86, 0x43, 0x31, 0x4d, 0xb4, 0x57,
	0xaa, 0x97, 0x1a, 0x3b, 0x7c, 0x6e, 0xba, 0x2f, 0x60, 0xfb, 0x22, 0x54, 0xea, 0x77, 0x21, 0x23,
	0xaf, 0x4c, 0xa1, 0xdc, 0x66, 0x63, 0xa8, 0x05, 0xbc, 0xe9, 0x1b, 0x9c, 0xd6, 0xf0, 0xd6, 0x3d,
	0x84, 0xca, 0x99, 0x94, 0x42, 0x7a, 0x1f, 0xea, 0xa5, 0x46, 0x85, 0x67, 0x46, 0x8a, 0x6e, 0x78,
	0x79, 0x3f, 0x65, 0xe8, 0xc6, 0x74, 0xf7, 0xc0, 0xf9, 0x0e, 0x67, 0x74, 0xa7, 0xc3, 0xd3, 0x9f,
	0xc4, 0x24, 0x8a, 0x24, 0x2a, 0x65, 0xae, 0x9b, 0x9b, 0xac, 0x0b, 0xfb, 0xc4, 0x9a, 0xe3, 0x28,
	0x56, 0x1a, 0xe5, 0x7f, 0x20, 0xee, 0xc3, 0x3e, 0x11, 0xcf, 0xa1, 0x36, 0xe0, 0xce, 0x5e, 0x81,
	0x1b, 0xf8, 0xcd, 0x4e, 0x56, 0x7d, 0x27, 0xd4, 0x48, 0x84, 0x56, 0x2a, 0x62, 0xf7, 0xe0, 0x06,
	0x9d, 0xb9, 0x4a, 0x94, 0xb7, 0x89, 0x52, 0x69, 0x39, 0xe3, 0x70, 0x86, 0xb2, 0xdb, 0x36, 0xe0,
	0xb9, 0xed, 0x1e, 0xc3, 0xd6, 0xf7, 0x8a, 0x22, 0x65, 0x8a, 0x18, 0x8b, 0x9d, 0xc0, 0x21, 0x31,
	0xec, 0xa0, 0x26, 0x4f, 0x72, 0x2d, 0x88, 0xe3, 0x22, 0xbf, 0xb4, 0x94, 0x7f, 0x0f, 0x87, 0xc4,
	0xd4, 0xce, 0xdf, 0x90, 0xeb, 0x79, 0x3c, 0xbc, 0x3d, 0x0f, 0x27, 0x68, 0xba, 0x92, 0xdb, 0x29,
	0x56, 0x5f, 0x24, 0x38, 0xf3, 0xfe, 0x47, 0x57, 0x67, 0x06, 0x3b, 0x82, 0x03, 0x62, 0x3a, 0xd0,
	0xa1, 0xd4, 0xfd, 0x50, 0x0f, 0x6f, 0x52, 0xa2, 0xec, 0x0c, 0x0e, 0x88, 0x90, 0xe5, 0xde, 0xa4,
	0x53, 0xc7, 0x46, 0x07, 0x8e, 0x7a, 0x2a, 0x93, 0x9e, 0xb8, 0xba, 0x9a, 0x05, 0xe7, 0x5a, 0xb3,
	0x9f, 0xcd, 0xad, 0xbe, 0xc4, 0x50, 0x23, 0x17, 0x62, 0x42, 0xf2, 0xfc, 0xdb, 0x72, 0x8b, 0xe4,
	0x3c, 0x32, 0xec, 0x2d, 0xf8, 0xd6, 0xf0, 0x96, 0x7d, 0x0a, 0xcf, 0xc9, 0x9d, 0xb5, 0xaf, 0x1d,
	0xab, 0xa1, 0x48, 0x12, 0x1c, 0x6a, 0xa2, 0xf4, 0x05, 0x1c, 0x05, 0xad, 0xa1, 0x16, 0x32, 0xe8,
	0x84, 0x13, 0x94, 0x1c, 0xc3, 0x88, 0xb8, 0x16, 0x5e, 0x72, 0x09, 0xcc, 0x3e, 0xd0, 0x91, 0xe1,
	0x55, 0x2f, 0x4c, 0xa2, 0xb1, 0x90, 0xd1, 0x00, 0xc7, 0x06, 0xb6, 0xe8, 0x74, 0xea, 0xef, 0xaa,
	0xf4, 0x0c, 0x4d, 0xce, 0x36, 0x37, 0x16, 0xfb, 0x1a, 0x3c, 0x1b, 0x35, 0xa5, 0xea, 0x87, 0x32,
	0x22, 0x79, 0xea, 0x50, 0x49, 0x7f, 0x2b, 0xaf, 0x54, 0x77, 0x1a, 0xd5, 0x26, 0x9c, 0x4c, 0xd4,
	0xe8, 0xc4, 0x4f, 0x5d, 0x3c, 0x0b, 0xb0, 0x6f, 0x0b, 0x4e, 0x6f, 0xd2, 0xbb, 0xcb, 0x02, 0xac,
	0x75, 0x55, 0xe5, 0x0c, 0xcb, 0x45, 0x0c, 0x3d, 0x38, 0x5e, 0x42, 0x95, 0x62, 0x72, 0xa7, 0x69,
	0xe4, 0x7e, 0x79, 0x34, 0xb2, 0xc9, 0x16, 0x7c, 0x5c, 0xa7, 0xe6, 0x72, 0x6d, 0x6d, 0x91, 0xe8,
	0xb4, 0xbe, 0xb5, 0xfd, 0xfe, 0x21, 0xe7, 0x77, 0x29, 0xa7, 0x4a, 0x23, 0xaa, 0x9b, 0xf8, 0x6e,
	0xad, 0x1a, 0x9f, 0xc1, 0x27, 0xb1, 0xb2, 0x92, 0x4d, 0xab, 0x97, 0x9d, 0xec, 0xef, 0x12, 0x54,
	0x03, 0x9f, 0x78, 0xa4, 0x7b, 0x5f, 0x88, 0x66, 0xef, 0x76, 0xb9, 0x68, 0xb7, 0x1d, 0x6b, 0xb7,
	0x53, 0xa4, 0x01, 0x86, 0xba, 0xdb, 0xf6, 0x80, 0x84, 0x33, 0x56, 0xaa, 0x5c, 0x57, 0xd1, 0x80,
	0x7b, 0x55, 0x62, 0x34, 0x37, 0xdd, 0x97, 0xb0, 0xd3, 0x55, 0xef, 0xaf, 0xaf, 0xc7, 0x71, 0x82,
	0xde, 0x2e, 0xc5, 0x16, 0x0e, 0xf6, 0x16, 0x76, 0x0d, 0x51, 0x52, 0xd1, 0x7d, 0x0d, 0xb0, 0xb0,
	0x1e, 0x11, 0xdb, 0x8a, 0x32, 0x1f, 0x9e, 0xdb, 0x8a, 0x9f, 0x25, 0x1a, 0x25, 0x2d, 0x66, 0x2a,
	0xe0, 0x2b, 0xa8, 0x90, 0x97, 0x2a, 0xae, 0x36, 0xf7, 0x08, 0xc3, 0xd2, 0x84, 0x67, 0x61, 0xe6,
	0xc3, 0x33, 0x1b, 0x44, 0x75, 0x93, 0x1c, 0xa2, 0x01, 0x5b, 0x99, 0xcf, 0x73, 0x88, 0xc7, 0x2a,
	0x86, 0x89, 0x3f, 0xec, 0xfd, 0xd9, 0x7d, 0xac, 0x73, 0x94, 0xa2, 0xde, 0xff, 0x51, 0x5e, 0xa6,
	0xcf, 0xd1, 0x7a, 0x3a, 0x52, 0xd5, 0xfa, 0xd3, 0xb1, 0x8e, 0xef, 0xc6, 0xa8, 0xe8, 0x60, 0x85,
	0x2f, 0x1c, 0x6e, 0x03, 0x76, 0x7a, 0x42, 0x46, 0x45, 0x7b, 0xb1, 0x08, 0xba, 0x6f, 0xa0, 0x66,
	0xea, 0x8a, 0x30, 0xd1, 0xb1, 0x9e, 0x79, 0x50, 0x77, 0x1a, 0xb5, 0x66, 0x2d, 0x4b, 0x9f, 0x7b,
	0xf9, 0x83, 0x2c, 0xf7, 0x4b, 0x80, 0x36, 0xaa, 0x5b, 0x95, 0x5d, 0x51, 0xa5, 0x2b, 0xf6, 0xed,
	0xfa, 0x29, 0xc0, 0xad, 0x24, 0xf7, 0x0d, 0x1c, 0xaf, 0xbe, 0x5a, 0x3a, 0xd4, 0x69, 0xd7, 0x9d,
	0xc6, 0x36, 0x2f, 0x88, 0xb2, 0xbf, 0x4a, 0x70, 0x68, 0x09, 0x41, 0x7f, 0x0f, 0xa4, 0x01, 0x83,
	0xdd, 0x8c, 0x55, 0xae, 0x9f, 0xd3, 0x70, 0xf8, 0x92, 0xcf, 0x7d, 0x0d, 0x7b, 0x99, 0x4d, 0x1c,
	0x7c, 0xfa, 0x76, 0x48, 0xbb, 0x55, 0xe1, 0x2b, 0x7e, 0xf7, 0x14, 0xaa, 0x96, 0xcf, 0xe8, 0xf6,
	0x48, 0x51, 0x76, 0x16, 0x7b, 0x0b, 0x75, 0x43, 0xae, 0x35, 0xd5, 0x37, 0x42, 0xc6, 0x7a, 0x66,
	0x97, 0xb0, 0xb6, 0xc5, 0x17, 0xf0, 0xf2, 0xe1, 0xd9, 0x27, 0x3d, 0x79, 0xb4, 0x4c, 0xef, 0x62,
	0xa9, 0xb4, 0x59, 0xef, 0xb9, 0xc9, 0xbe, 0xca, 0xa7, 0x75, 0x80, 0x3a, 0x9f, 0x87, 0x8f, 0x4f,
	0x0c, 0xfb, 0x90, 0xbf, 0x34, 0x03, 0xd4, 0x4f, 0x21, 0xff, 0xf4, 0x19, 0x63, 0x7f, 0x96, 0xe0,
	0xc0, 0x6a, 0xa0, 0xf8, 0x0d, 0xa5, 0x59, 0xc1, 0xad, 0x1f, 0xe3, 0x24, 0x31, 0x3b, 0xb8, 0x3a,
	0x73, 0x26, 0xea, 0x7e, 0x0e, 0xfb, 0xdf, 0x84, 0x0a, 0x2f, 0x44, 0x9c, 0xe8, 0x0b, 0x94, 0xf4,
	0x69, 0x60, 0x3e, 0x7e, 0x56, 0x03, 0xcb, 0x75, 0x3a, 0x0f, 0xeb, 0x3c, 0x5d, 0x5e, 0x2a, 0x7a,
	0xb4, 0x7a, 0xa8, 0xd4, 0xba, 0x52, 0xaf, 0xb6, 0xe8, 0x4b, 0xfa, 0xf4, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x23, 0xf9, 0x26, 0xcd, 0x7b, 0x0b, 0x00, 0x00,
}
