// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ChessModel.proto

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	ChessModel.proto
	ChessOuterMessage.proto
	lobby.proto

It has these top-level messages:
	CCard
	C2R_Login_Req
	R2C_Login_Ack
	C2R_Register_Req
	R2C_Register_Ack
	C2G_LoginGate_Req
	G2C_LoginGate_Ack
	C2G_GetUserInfo_Req
	G2C_GetUserInfo_Ack
	C2G_StartMatch_Req
	G2C_StartMatch_Ack
	C2G_ReturnLobby_Ntt
	C2G_CreateRoom_Req
	G2C_CreateRoom_Ack
	G2C_PlayerDisconnect_Ntt
	Actor_GamerReady_Ntt
	Actor_GamerGrabLandlordSelect_Ntt
	Actor_GamerPlayCard_Req
	Actor_GamerPlayCard_Ack
	Actor_GamerPlayCard_Ntt
	Actor_GamerPrompt_Req
	Actor_GamerPrompt_Ack
	Actor_GamerDontPlay_Ntt
	Actor_Trusteeship_Ntt
	CGamerInfo
	CGamerCards
	Actor_GamerEnterRoom_Ntt
	Actor_GamersInRoom_Ntt
	Actor_GamerExitRoom_Ntt
	Actor_GamerReconnect_Ntt
	Actor_GameStart_Ntt
	Actor_AuthorityGrabLandlord_Ntt
	Actor_AuthorityPlayCard_Ntt
	Actor_SetMultiples_Ntt
	Actor_SetLandlord_Ntt
	Actor_Gameover_Ntt
	Actor_GamerMoneyLess_Ntt
	Test
	UserLogin
	UserRegister
	UserResult
	UserST
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CSuits int32

const (
	CSuits_CSuits_NULL CSuits = 0
	CSuits_Club        CSuits = 1
	CSuits_Diamond     CSuits = 2
	CSuits_Heart       CSuits = 3
	CSuits_Spad        CSuits = 4
)

var CSuits_name = map[int32]string{
	0: "CSuits_NULL",
	1: "Club",
	2: "Diamond",
	3: "Heart",
	4: "Spad",
}
var CSuits_value = map[string]int32{
	"CSuits_NULL": 0,
	"Club":        1,
	"Diamond":     2,
	"Heart":       3,
	"Spad":        4,
}

func (x CSuits) String() string {
	return proto.EnumName(CSuits_name, int32(x))
}
func (CSuits) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CWeight int32

const (
	CWeight_CWeight_NULl CWeight = 0
	CWeight_Three        CWeight = 3
	CWeight_Four         CWeight = 4
	CWeight_Five         CWeight = 5
	CWeight_Six          CWeight = 6
	CWeight_Seven        CWeight = 7
	CWeight_Eight        CWeight = 8
	CWeight_Nine         CWeight = 9
	CWeight_Ten          CWeight = 10
	CWeight_Jack         CWeight = 11
	CWeight_Queen        CWeight = 12
	CWeight_King         CWeight = 13
	CWeight_One          CWeight = 14
	CWeight_Two          CWeight = 15
	CWeight_SJoker       CWeight = 16
	CWeight_LJoker       CWeight = 17
)

var CWeight_name = map[int32]string{
	0:  "CWeight_NULl",
	3:  "Three",
	4:  "Four",
	5:  "Five",
	6:  "Six",
	7:  "Seven",
	8:  "Eight",
	9:  "Nine",
	10: "Ten",
	11: "Jack",
	12: "Queen",
	13: "King",
	14: "One",
	15: "Two",
	16: "SJoker",
	17: "LJoker",
}
var CWeight_value = map[string]int32{
	"CWeight_NULl": 0,
	"Three":        3,
	"Four":         4,
	"Five":         5,
	"Six":          6,
	"Seven":        7,
	"Eight":        8,
	"Nine":         9,
	"Ten":          10,
	"Jack":         11,
	"Queen":        12,
	"King":         13,
	"One":          14,
	"Two":          15,
	"SJoker":       16,
	"LJoker":       17,
}

func (x CWeight) String() string {
	return proto.EnumName(CWeight_name, int32(x))
}
func (CWeight) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CIdentity int32

const (
	CIdentity_CIdentity_NULL CIdentity = 0
	CIdentity_Farmer         CIdentity = 1
	CIdentity_Landlord       CIdentity = 2
)

var CIdentity_name = map[int32]string{
	0: "CIdentity_NULL",
	1: "Farmer",
	2: "Landlord",
}
var CIdentity_value = map[string]int32{
	"CIdentity_NULL": 0,
	"Farmer":         1,
	"Landlord":       2,
}

func (x CIdentity) String() string {
	return proto.EnumName(CIdentity_name, int32(x))
}
func (CIdentity) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CCard struct {
	CardWeight CWeight `protobuf:"varint,1,opt,name=CardWeight,enum=msg.CWeight" json:"CardWeight,omitempty"`
	CardSuits  CSuits  `protobuf:"varint,2,opt,name=CardSuits,enum=msg.CSuits" json:"CardSuits,omitempty"`
}

func (m *CCard) Reset()                    { *m = CCard{} }
func (m *CCard) String() string            { return proto.CompactTextString(m) }
func (*CCard) ProtoMessage()               {}
func (*CCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CCard) GetCardWeight() CWeight {
	if m != nil {
		return m.CardWeight
	}
	return CWeight_CWeight_NULl
}

func (m *CCard) GetCardSuits() CSuits {
	if m != nil {
		return m.CardSuits
	}
	return CSuits_CSuits_NULL
}

func init() {
	proto.RegisterType((*CCard)(nil), "msg.CCard")
	proto.RegisterEnum("msg.CSuits", CSuits_name, CSuits_value)
	proto.RegisterEnum("msg.CWeight", CWeight_name, CWeight_value)
	proto.RegisterEnum("msg.CIdentity", CIdentity_name, CIdentity_value)
}

func init() { proto.RegisterFile("ChessModel.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0xc7, 0x29, 0x2f, 0x2d, 0x9d, 0xf6, 0x81, 0x79, 0xf6, 0xc4, 0xd1, 0x78, 0x52, 0x62, 0x38,
	0xe8, 0xc9, 0x73, 0x85, 0x28, 0x56, 0x8c, 0x14, 0xe3, 0x51, 0x8b, 0x9d, 0x94, 0x0d, 0xed, 0x2e,
	0xd9, 0xb6, 0xa8, 0x1f, 0xcc, 0xef, 0x67, 0xa6, 0xc5, 0x97, 0xd3, 0xfe, 0xe6, 0x3f, 0xbf, 0x99,
	0x6c, 0x76, 0x01, 0x83, 0x0d, 0x15, 0xc5, 0x9d, 0x4e, 0x28, 0x9b, 0xec, 0x8c, 0x2e, 0xb5, 0xe8,
	0xe4, 0x45, 0x7a, 0xfc, 0x02, 0xbd, 0x20, 0x88, 0x4d, 0x22, 0xce, 0x00, 0xf8, 0x7c, 0x22, 0x99,
	0x6e, 0xca, 0x91, 0x75, 0x64, 0x9d, 0x0c, 0xce, 0xfd, 0x49, 0x5e, 0xa4, 0x93, 0xa0, 0xc9, 0x96,
	0x7f, 0xfa, 0xe2, 0x14, 0x5c, 0xae, 0xa2, 0x4a, 0x96, 0xc5, 0xa8, 0x5d, 0xcb, 0x5e, 0x23, 0xd7,
	0xd1, 0xf2, 0xb7, 0x3b, 0x9e, 0x82, 0xdd, 0x84, 0x62, 0x08, 0x5e, 0x43, 0xcf, 0x8b, 0xc7, 0x30,
	0xc4, 0x96, 0xe8, 0x43, 0x37, 0xc8, 0xaa, 0x35, 0x5a, 0xc2, 0x03, 0xe7, 0x4a, 0xc6, 0xb9, 0x56,
	0x09, 0xb6, 0x85, 0x0b, 0xbd, 0x6b, 0x8a, 0x4d, 0x89, 0x1d, 0x36, 0xa2, 0x5d, 0x9c, 0x60, 0x77,
	0xfc, 0x69, 0x81, 0x73, 0xb8, 0x89, 0x40, 0xf0, 0x0f, 0xc8, 0x9b, 0x32, 0x6c, 0xf1, 0xc8, 0x6a,
	0x63, 0x88, 0x9a, 0x91, 0x99, 0xae, 0x0c, 0x76, 0x6b, 0x92, 0x7b, 0xc2, 0x9e, 0x70, 0xa0, 0x13,
	0xc9, 0x77, 0xb4, 0xd9, 0x8b, 0x68, 0x4f, 0x0a, 0x1d, 0xc6, 0x29, 0xaf, 0xc0, 0x3e, 0x8b, 0x0b,
	0xa9, 0x08, 0x5d, 0x16, 0x57, 0xa4, 0x10, 0x38, 0x9a, 0xc7, 0xaf, 0x5b, 0xf4, 0xd8, 0x7b, 0xa8,
	0x88, 0x14, 0xfa, 0x1c, 0xde, 0x4a, 0x95, 0xe2, 0x3f, 0xf6, 0xee, 0x15, 0xe1, 0xa0, 0x1e, 0x78,
	0xd3, 0x38, 0x14, 0x00, 0x76, 0x34, 0xd7, 0x5b, 0x32, 0x88, 0xcc, 0x61, 0xc3, 0xff, 0xc7, 0x97,
	0xe0, 0x06, 0x37, 0x09, 0xa9, 0x52, 0x96, 0x1f, 0x42, 0xc0, 0xe0, 0xa7, 0xf8, 0x7e, 0x04, 0x00,
	0x7b, 0x16, 0x9b, 0x9c, 0x0c, 0x5a, 0xc2, 0x87, 0x7e, 0x18, 0xab, 0x24, 0xd3, 0x26, 0xc1, 0xf6,
	0xda, 0xae, 0xff, 0xe9, 0xe2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x95, 0x1a, 0x09, 0x86, 0xbb, 0x01,
	0x00, 0x00,
}
